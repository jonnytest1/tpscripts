<?php
        declare(encoding='UTF-8');
header('Content-type: text/plain; charset=utf-8');
            $xss="eyJhcHBsaWNhdGlvbiI6IkVjbGlwc2UgUGx1Z2luIiwidGltZXN0YW1wIjoiMjAyMC0wNC0zMFQwOToyOTozMi4zODQzOTMzMDBaIiwiU2V2ZXJpdHkiOiJFUlJPUiIsIndvcmtzcGFjZSI6Im1hc3RlciIsImJhc2VfdmVyc2lvbiI6IjIuMTkuMjQiLCJwbHVnaW4iOiJhX3BsdWdpbl9iYXNlIiwidmVyc2lvbiI6IjIuMTkuMjQiLCJtZXNzYWdlIjoiY2F1Z2h0IGV4Y2VwdGlvblxuY2F1c2UgOmphdmEuaW8uSU9FeGNlcHRpb246IENyZWF0ZVByb2Nlc3MgZXJyb3I9MjY3LCBEZXIgVmVyemVpY2huaXNuYW1lIGlzdCB1bmf8bHRpZ1xuamF2YS5pby5JT0V4Y2VwdGlvbjogQ2Fubm90IHJ1biBwcm9ncmFtIFwiY21kLmV4ZVwiIChpbiBkaXJlY3RvcnkgXCJEOlxcd2ViYXBwc1xcZWNsaXBzZS13b3Jrc3BhY2VzXFxtYXN0ZXJcXFJlbW90ZVN5c3RlbXNUZW1wRmlsZXNcIik6IENyZWF0ZVByb2Nlc3MgZXJyb3I9MjY3LCBEZXIgVmVyemVpY2huaXNuYW1lIGlzdCB1bmf8bHRpZ1xuamF2YS5iYXNlL2phdmEubGFuZy5Qcm9jZXNzQnVpbGRlci5zdGFydChQcm9jZXNzQnVpbGRlci5qYXZhOjExMjgpXG5qYXZhLmJhc2UvamF2YS5sYW5nLlByb2Nlc3NCdWlsZGVyLnN0YXJ0KFByb2Nlc3NCdWlsZGVyLmphdmE6MTA3MSlcbnNvY2lhbGRlYXIudXRpbC5FeGVjdXRlci5ydW4oRXhlY3V0ZXIuamF2YTo2NylcbnNvY2lhbGRlYXIudXRpbC5FeGVjdXRlci5ydW4oRXhlY3V0ZXIuamF2YTo1MilcbnNvY2lhbGRlYXIudXRpbC5maWxlcy5SZXNvdXJjZU1vbml0b3IuY2hlY2tQcm9qZWN0KFJlc291cmNlTW9uaXRvci5qYXZhOjg1KVxuc29jaWFsZGVhci51dGlsLmZpbGVzLlJlc291cmNlTW9uaXRvci5jaGVja1Jlc291cmNlcyhSZXNvdXJjZU1vbml0b3IuamF2YTo3MilcbmphdmEuYmFzZS9qYXZhLnV0aWwuY29uY3VycmVudC5FeGVjdXRvcnMkUnVubmFibGVBZGFwdGVyLmNhbGwoRXhlY3V0b3JzLmphdmE6NTE1KVxuamF2YS5iYXNlL2phdmEudXRpbC5jb25jdXJyZW50LkZ1dHVyZVRhc2sucnVuQW5kUmVzZXQoRnV0dXJlVGFzay5qYXZhOjMwNSlcbmphdmEuYmFzZS9qYXZhLnV0aWwuY29uY3VycmVudC5TY2hlZHVsZWRUaHJlYWRQb29sRXhlY3V0b3IkU2NoZWR1bGVkRnV0dXJlVGFzay5ydW4oU2NoZWR1bGVkVGhyZWFkUG9vbEV4ZWN1dG9yLmphdmE6MzA1KVxuamF2YS5iYXNlL2phdmEudXRpbC5jb25jdXJyZW50LlRocmVhZFBvb2xFeGVjdXRvci5ydW5Xb3JrZXIoVGhyZWFkUG9vbEV4ZWN1dG9yLmphdmE6MTEyOClcbmphdmEuYmFzZS9qYXZhLnV0aWwuY29uY3VycmVudC5UaHJlYWRQb29sRXhlY3V0b3IkV29ya2VyLnJ1bihUaHJlYWRQb29sRXhlY3V0b3IuamF2YTo2MjgpXG5qYXZhLmJhc2UvamF2YS5sYW5nLlRocmVhZC5ydW4oVGhyZWFkLmphdmE6ODM0KSIsIm9yaWdpbl9sb2ciOiJqYXZhLmxhbmcuVGhyb3dhYmxlXHJcblx0YXQgamF2YS5iYXNlL2phdmEubGFuZy5UaHJlYWQuZ2V0U3RhY2tUcmFjZShUaHJlYWQuamF2YToxNjA2KVxyXG5cdGF0IHNvY2lhbGRlYXIuaHR0cC5sb2dnaW5nLkxvZ2dpbmcubG9nUmVxdWVzdChMb2dnaW5nLmphdmE6NzIpXHJcblx0YXQgc29jaWFsZGVhci5odHRwLmxvZ2dpbmcuTG9nZ2luZy5sb2dSZXF1ZXN0KExvZ2dpbmcuamF2YToxMDgpXHJcblx0YXQgc29jaWFsZGVhci5sb2dnaW5nLlN5c3RlbVByb3BlcnRpZXMucHJpbnQoU3lzdGVtUHJvcGVydGllcy5qYXZhOjEyMSlcclxuXHRhdCBzb2NpYWxkZWFyLmxvZ2dpbmcuU3lzdGVtUHJvcGVydGllcy5wcmludChTeXN0ZW1Qcm9wZXJ0aWVzLmphdmE6NjEpXHJcblx0YXQgc29jaWFsZGVhci5sb2dnaW5nLlN5c3RlbVByb3BlcnRpZXMucHJpbnQoU3lzdGVtUHJvcGVydGllcy5qYXZhOjcxKVxyXG5cdGF0IHNvY2lhbGRlYXIubG9nZ2luZy5TeXN0ZW1Qcm9wZXJ0aWVzLnByaW50KFN5c3RlbVByb3BlcnRpZXMuamF2YTo4NSlcclxuXHRhdCBzb2NpYWxkZWFyLnV0aWwuRXhlY3V0ZXIucnVuKEV4ZWN1dGVyLmphdmE6NzkpXHJcblx0YXQgc29jaWFsZGVhci51dGlsLkV4ZWN1dGVyLnJ1bihFeGVjdXRlci5qYXZhOjUyKVxyXG5cdGF0IHNvY2lhbGRlYXIudXRpbC5maWxlcy5SZXNvdXJjZU1vbml0b3IuY2hlY2tQcm9qZWN0KFJlc291cmNlTW9uaXRvci5qYXZhOjg1KVxyXG5cdGF0IHNvY2lhbGRlYXIudXRpbC5maWxlcy5SZXNvdXJjZU1vbml0b3IuY2hlY2tSZXNvdXJjZXMoUmVzb3VyY2VNb25pdG9yLmphdmE6NzIpXHJcblx0YXQgamF2YS5iYXNlL2phdmEudXRpbC5jb25jdXJyZW50LkV4ZWN1dG9ycyRSdW5uYWJsZUFkYXB0ZXIuY2FsbChFeGVjdXRvcnMuamF2YTo1MTUpXHJcblx0YXQgamF2YS5iYXNlL2phdmEudXRpbC5jb25jdXJyZW50LkZ1dHVyZVRhc2sucnVuQW5kUmVzZXQoRnV0dXJlVGFzay5qYXZhOjMwNSlcclxuXHRhdCBqYXZhLmJhc2UvamF2YS51dGlsLmNvbmN1cnJlbnQuU2NoZWR1bGVkVGhyZWFkUG9vbEV4ZWN1dG9yJFNjaGVkdWxlZEZ1dHVyZVRhc2sucnVuKFNjaGVkdWxlZFRocmVhZFBvb2xFeGVjdXRvci5qYXZhOjMwNSlcclxuXHRhdCBqYXZhLmJhc2UvamF2YS51dGlsLmNvbmN1cnJlbnQuVGhyZWFkUG9vbEV4ZWN1dG9yLnJ1bldvcmtlcihUaHJlYWRQb29sRXhlY3V0b3IuamF2YToxMTI4KVxyXG5cdGF0IGphdmEuYmFzZS9qYXZhLnV0aWwuY29uY3VycmVudC5UaHJlYWRQb29sRXhlY3V0b3IkV29ya2VyLnJ1bihUaHJlYWRQb29sRXhlY3V0b3IuamF2YTo2MjgpXHJcblx0YXQgamF2YS5iYXNlL2phdmEubGFuZy5UaHJlYWQucnVuKFRocmVhZC5qYXZhOjgzNClcclxuIiwiZXJyb3JfbWVzc2FnZSI6IkNhbm5vdCBydW4gcHJvZ3JhbSBcImNtZC5leGVcIiAoaW4gZGlyZWN0b3J5IFwiRDpcXHdlYmFwcHNcXGVjbGlwc2Utd29ya3NwYWNlc1xcbWFzdGVyXFxSZW1vdGVTeXN0ZW1zVGVtcEZpbGVzXCIpOiBDcmVhdGVQcm9jZXNzIGVycm9yPTI2NywgRGVyIFZlcnplaWNobmlzbmFtZSBpc3QgdW5n/Gx0aWciLCJlcnJvcl9zdGFja3RyYWNlIjoiamF2YS5pby5JT0V4Y2VwdGlvbjogQ2Fubm90IHJ1biBwcm9ncmFtIFwiY21kLmV4ZVwiIChpbiBkaXJlY3RvcnkgXCJEOlxcd2ViYXBwc1xcZWNsaXBzZS13b3Jrc3BhY2VzXFxtYXN0ZXJcXFJlbW90ZVN5c3RlbXNUZW1wRmlsZXNcIik6IENyZWF0ZVByb2Nlc3MgZXJyb3I9MjY3LCBEZXIgVmVyemVpY2huaXNuYW1lIGlzdCB1bmf8bHRpZ1xyXG5cdGF0IGphdmEuYmFzZS9qYXZhLmxhbmcuUHJvY2Vzc0J1aWxkZXIuc3RhcnQoUHJvY2Vzc0J1aWxkZXIuamF2YToxMTI4KVxyXG5cdGF0IGphdmEuYmFzZS9qYXZhLmxhbmcuUHJvY2Vzc0J1aWxkZXIuc3RhcnQoUHJvY2Vzc0J1aWxkZXIuamF2YToxMDcxKVxyXG5cdGF0IHNvY2lhbGRlYXIudXRpbC5FeGVjdXRlci5ydW4oRXhlY3V0ZXIuamF2YTo2NylcclxuXHRhdCBzb2NpYWxkZWFyLnV0aWwuRXhlY3V0ZXIucnVuKEV4ZWN1dGVyLmphdmE6NTIpXHJcblx0YXQgc29jaWFsZGVhci51dGlsLmZpbGVzLlJlc291cmNlTW9uaXRvci5jaGVja1Byb2plY3QoUmVzb3VyY2VNb25pdG9yLmphdmE6ODUpXHJcblx0YXQgc29jaWFsZGVhci51dGlsLmZpbGVzLlJlc291cmNlTW9uaXRvci5jaGVja1Jlc291cmNlcyhSZXNvdXJjZU1vbml0b3IuamF2YTo3MilcclxuXHRhdCBqYXZhLmJhc2UvamF2YS51dGlsLmNvbmN1cnJlbnQuRXhlY3V0b3JzJFJ1bm5hYmxlQWRhcHRlci5jYWxsKEV4ZWN1dG9ycy5qYXZhOjUxNSlcclxuXHRhdCBqYXZhLmJhc2UvamF2YS51dGlsLmNvbmN1cnJlbnQuRnV0dXJlVGFzay5ydW5BbmRSZXNldChGdXR1cmVUYXNrLmphdmE6MzA1KVxyXG5cdGF0IGphdmEuYmFzZS9qYXZhLnV0aWwuY29uY3VycmVudC5TY2hlZHVsZWRUaHJlYWRQb29sRXhlY3V0b3IkU2NoZWR1bGVkRnV0dXJlVGFzay5ydW4oU2NoZWR1bGVkVGhyZWFkUG9vbEV4ZWN1dG9yLmphdmE6MzA1KVxyXG5cdGF0IGphdmEuYmFzZS9qYXZhLnV0aWwuY29uY3VycmVudC5UaHJlYWRQb29sRXhlY3V0b3IucnVuV29ya2VyKFRocmVhZFBvb2xFeGVjdXRvci5qYXZhOjExMjgpXHJcblx0YXQgamF2YS5iYXNlL2phdmEudXRpbC5jb25jdXJyZW50LlRocmVhZFBvb2xFeGVjdXRvciRXb3JrZXIucnVuKFRocmVhZFBvb2xFeGVjdXRvci5qYXZhOjYyOClcclxuXHRhdCBqYXZhLmJhc2UvamF2YS5sYW5nLlRocmVhZC5ydW4oVGhyZWFkLmphdmE6ODM0KVxyXG5DYXVzZWQgYnk6IGphdmEuaW8uSU9FeGNlcHRpb246IENyZWF0ZVByb2Nlc3MgZXJyb3I9MjY3LCBEZXIgVmVyemVpY2huaXNuYW1lIGlzdCB1bmf8bHRpZ1xyXG5cdGF0IGphdmEuYmFzZS9qYXZhLmxhbmcuUHJvY2Vzc0ltcGwuY3JlYXRlKE5hdGl2ZSBNZXRob2QpXHJcblx0YXQgamF2YS5iYXNlL2phdmEubGFuZy5Qcm9jZXNzSW1wbC48aW5pdD4oUHJvY2Vzc0ltcGwuamF2YTo0MjApXHJcblx0YXQgamF2YS5iYXNlL2phdmEubGFuZy5Qcm9jZXNzSW1wbC5zdGFydChQcm9jZXNzSW1wbC5qYXZhOjE1MSlcclxuXHRhdCBqYXZhLmJhc2UvamF2YS5sYW5nLlByb2Nlc3NCdWlsZGVyLnN0YXJ0KFByb2Nlc3NCdWlsZGVyLmphdmE6MTEwNylcclxuXHQuLi4gMTEgbW9yZVxyXG4iLCJjYXVzZV9lcnJvcl9tZXNzYWdlIjoiQ3JlYXRlUHJvY2VzcyBlcnJvcj0yNjcsIERlciBWZXJ6ZWljaG5pc25hbWUgaXN0IHVuZ/xsdGlnIiwiY2F1c2VfZXJyb3Jfc3RhY2t0cmFjZSI6ImphdmEuaW8uSU9FeGNlcHRpb246IENyZWF0ZVByb2Nlc3MgZXJyb3I9MjY3LCBEZXIgVmVyemVpY2huaXNuYW1lIGlzdCB1bmf8bHRpZ1xyXG5cdGF0IGphdmEuYmFzZS9qYXZhLmxhbmcuUHJvY2Vzc0ltcGwuY3JlYXRlKE5hdGl2ZSBNZXRob2QpXHJcblx0YXQgamF2YS5iYXNlL2phdmEubGFuZy5Qcm9jZXNzSW1wbC48aW5pdD4oUHJvY2Vzc0ltcGwuamF2YTo0MjApXHJcblx0YXQgamF2YS5iYXNlL2phdmEubGFuZy5Qcm9jZXNzSW1wbC5zdGFydChQcm9jZXNzSW1wbC5qYXZhOjE1MSlcclxuXHRhdCBqYXZhLmJhc2UvamF2YS5sYW5nLlByb2Nlc3NCdWlsZGVyLnN0YXJ0KFByb2Nlc3NCdWlsZGVyLmphdmE6MTEwNylcclxuXHRhdCBqYXZhLmJhc2UvamF2YS5sYW5nLlByb2Nlc3NCdWlsZGVyLnN0YXJ0KFByb2Nlc3NCdWlsZGVyLmphdmE6MTA3MSlcclxuXHRhdCBzb2NpYWxkZWFyLnV0aWwuRXhlY3V0ZXIucnVuKEV4ZWN1dGVyLmphdmE6NjcpXHJcblx0YXQgc29jaWFsZGVhci51dGlsLkV4ZWN1dGVyLnJ1bihFeGVjdXRlci5qYXZhOjUyKVxyXG5cdGF0IHNvY2lhbGRlYXIudXRpbC5maWxlcy5SZXNvdXJjZU1vbml0b3IuY2hlY2tQcm9qZWN0KFJlc291cmNlTW9uaXRvci5qYXZhOjg1KVxyXG5cdGF0IHNvY2lhbGRlYXIudXRpbC5maWxlcy5SZXNvdXJjZU1vbml0b3IuY2hlY2tSZXNvdXJjZXMoUmVzb3VyY2VNb25pdG9yLmphdmE6NzIpXHJcblx0YXQgamF2YS5iYXNlL2phdmEudXRpbC5jb25jdXJyZW50LkV4ZWN1dG9ycyRSdW5uYWJsZUFkYXB0ZXIuY2FsbChFeGVjdXRvcnMuamF2YTo1MTUpXHJcblx0YXQgamF2YS5iYXNlL2phdmEudXRpbC5jb25jdXJyZW50LkZ1dHVyZVRhc2sucnVuQW5kUmVzZXQoRnV0dXJlVGFzay5qYXZhOjMwNSlcclxuXHRhdCBqYXZhLmJhc2UvamF2YS51dGlsLmNvbmN1cnJlbnQuU2NoZWR1bGVkVGhyZWFkUG9vbEV4ZWN1dG9yJFNjaGVkdWxlZEZ1dHVyZVRhc2sucnVuKFNjaGVkdWxlZFRocmVhZFBvb2xFeGVjdXRvci5qYXZhOjMwNSlcclxuXHRhdCBqYXZhLmJhc2UvamF2YS51dGlsLmNvbmN1cnJlbnQuVGhyZWFkUG9vbEV4ZWN1dG9yLnJ1bldvcmtlcihUaHJlYWRQb29sRXhlY3V0b3IuamF2YToxMTI4KVxyXG5cdGF0IGphdmEuYmFzZS9qYXZhLnV0aWwuY29uY3VycmVudC5UaHJlYWRQb29sRXhlY3V0b3IkV29ya2VyLnJ1bihUaHJlYWRQb29sRXhlY3V0b3IuamF2YTo2MjgpXHJcblx0YXQgamF2YS5iYXNlL2phdmEubGFuZy5UaHJlYWQucnVuKFRocmVhZC5qYXZhOjgzNClcclxuIn0=";
            

            
            $test="ü";
            //echo base64_decode(base64_encode("ü"));
            $decoded=decode_b64($xss);
            //echo ord($test)."<br>";
           // $ord=ord(explode("ltig",explode("ung",$decoded)[1])[0]);
           // echo $ord."<br>";
            //echo chr(ord($test));
            $dec=192;
            $utf = chr(192 + (($dec - ($dec % 64)) / 64));
            //echo $utf;
           // echo chr(252);
            $parsed=json_decode($decoded,true);
            echo json_encode( $parsed);

            function decode_b64($str){
                $dec=base64_decode($str);
                $chars=str_split($dec);
                $res="";
                foreach($chars as $char){
                    $res=$res.unichr(ord($char));
                }
                return $res;
            }
            function unichr($dec) {
                if ($dec < 128) {
                  $utf = chr($dec);
                } else if ($dec < 2048) {
                  $utf = chr(192 + (($dec - ($dec % 64)) / 64));
                  $utf .= chr(128 + ($dec % 64));
                } else {
                  $utf = chr(224 + (($dec - ($dec % 4096)) / 4096));
                  $utf .= chr(128 + ((($dec % 4096) - ($dec % 64)) / 64));
                  $utf .= chr(128 + ($dec % 64));
                }
                return $utf;
            }
?>